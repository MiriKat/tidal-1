d1
$ spreadChoose _slow [1..19]
$ spreadChoose _fast [1..19]
$ degradeBy 0.55
$ s "txz"
# n (discretise (1/199) $ slow 0.1 $ choose [0..6])
# cut (slow 0.11 $ wchoose [8,1][0,1])
# up (slow 0.12 $ choose [0,2,3,5,7,8,11]
  - (discretise (1/2) $ choose [0])
  + (discretise (1/3) $ choose [0,12,24,36]))
# lpf (slow 0.13 $ scale 20 20000 $ rand)
# pan (slow 0.14 $ rand)
# rel (discretise (1/3) $ slow 0.15 $ scale 1 6 $ rand)
# gain (discretise (1/3) $ slow 0.16 $ scale 0.75 1 $ rand)
# hpf (discretise (1/3) $ slow 0.17 $ scale 20 300 $ rand)
# att (discretise (1/3) $ slow 0.18 $ scale 0 2.5 $ rand)
# hold (discretise (1/3) $ slow 0.19 $ scale 0.5 2 $ rand)

let wchoose weights values = choose $ concatMap (\x -> replicate (fst x) (snd x)) (zip weights values)

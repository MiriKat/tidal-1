let wchoose values weights = choose $ concatMap (\x -> replicate (fst x) (snd x)) (zip weights values)

d1
$ iter (slow 0.1 $ wchoose [1,2] [1,32])
$ fast 1.25
$ fast (slow 0.11 $ wchoose [1.001,1,0.999] [1,9999,1])
$ slow (slow 0.12 $ wchoose [1.5,1,1.25] [1,99,1])
$ s (randcat ["sgl*4","sgl*8","sgl*8","sgl*8","sgl*8","sgl*8","sgl*8","sgl*8","sgl*8","sgl*8","sgl*8","sgl*8","sgl*8"])
# release (slow 0.13 $ scale 0.0025 2 $ rand)
# pan (slow 0.14 $ rand)
# accelerate (slow 0.15 $ scale (-0.06) 0.06 $ rand)
# gain (slow 0.16 $ scale 0.75 1.75 $ rand)
# lpf (slow 0.17 $ scale 200 20000 $ rand)
# up (slow 0.18 $ wchoose [0,-0.125,0.125] [99,1,1])
# cut (slow 0.19 $ wchoose [0,1] [1,32])
# nudge (slow 99 $ scale 0 1.125 $ saw)
# hpf (slow 0.20 $ scale 20 200 $ rand)
# delay (slow 0.21 $ wchoose [0.1,1] [16,1])
# delaytime (slow 0.22 $ wchoose [0.0005,0.001,0.002,0.004,0.008,0.016,0.032,0.064][99,88,77,66,55,44,33,22])
# delayfeedback (slow 0.23 $ wchoose [1,0.5] [1,4])

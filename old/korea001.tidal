d1
$ sometimesBy 0.45 (spread _slow [2,2,2,4,4])
$ sometimesBy 0.5 (slow 2)
$ stack[
degradeBy 0.4
$ sometimesBy 0.05 (2<~)
$ fast 2
$ sometimesBy 0.1 (iter 2)
$ spreadChoose _fast [1..2]
$ s (randcat["tuu*8?","srg*7?","sbu*6?"])
# pan (slow 0.1 $ rand)
# n (discretise (1/7) $ slow 0.11 $ choose [0..99])
# up (discretise (1/8) $ slow 0.12 $ scale (-16) 16 $ rand)
# gain 4
# nudge (discretise (1/32) $ slow 0.13 $ scale (-0.5) 3 $ rand)
# shape (slow 0.14 $ rand)
# delay (slow 160 $ scale 0.95 1 $ sine)
# delayfb 1
# delayt (discretise (1/56) $ slow 0.15 $
choose [1/32,1/64,1/128,1/256,1/512]
/ wchoose[9,8,7,6,5,4,3,2,1] [1..9]
* wchoose [12,11,10,9,8,7,6,5,4,3,2,1] [1,1.4,2.3,3.6,4.7,5.9,6.2,7.3,8.5,9.7,10.1,11.7]
* (slow 56 $ scale 1 2 $ sine))
# rel (slow 133 $ scale 0 2 $ saw),
degradeBy 0.4
$ sometimesBy 0.05 (2<~)
$ fast 2
$ sometimesBy 0.1 (iter 2)
$ spreadChoose _fast [1..2]
$ s (randcat["bch*5?"])
# pan (slow 0.15 $ rand)
# n (discretise (1/9) $ slow 0.16 $ choose [21..39])
# up (discretise (1/11) $ slow 0.17 $ scale (-18) 0 $ rand)
# gain 4
# att (slow 0.18 $ scale 2 4 $ rand)
# hpf (discretise (1/9) $ slow 0.19 $ wchoose [5,4,3,2,1] [20,40,160,320,640])
]

let wchoose weights values = choose $ concatMap (\x -> replicate (fst x) (snd x)) (zip weights values)


d1
$ sometimesBy 0.35 (slow 3)
$ fast 8
$ stack[
s "bch:31"
# up (slow 428 $ scale 46 66 $ sine)
# pan 0.5,
s "bch:31"
# up (slow 316 $ scale 22 46 $ saw)
# pan 1,
s "bch:31"
# up (slow 274 $ scale 27 10 $ saw)
# pan 0,
s "bch:31"
# up (slow 674 $ scale 10 19 $ saw)
# pan 0.25,
s "bch:31"
# up (slow 293 $ scale 7 25 $ saw)
# pan 0.75
]
# nudge (slow 128 $ scale 0 3 $ sine)
# hpf (slow 278 $ scalex 20000 20 $ sine)
# delayt (discretise (1/8) $ slow 0.1 $ scalex (1/298) (1/295) $ rand)
# delay (discretise (1/9) $ slow 0.11 $ scale 0 0.75 $ rand)
# delayfb (discretise (1/10) $ slow 0.12 $ wchoose [1,8] [0,1])
# gain (slow 0.13 $ scalex 1 4 $ rand)
# rel (slow 0.14 $ scale 0 2 $ rand)
# shape 0.5

let wchoose weights values = choose $ concatMap (\x ->
replicate (fst x) (snd x)) (zip weights values)


d1
$ spreadChoose _fast [1..4]
$ sometimesBy 0.5 (slow 2)
$ s "srg*29?"
# pan (slow 4 $ saw)
# gain (slow 0.1 $ scale 0.5 2 $ rand)
# rel (slow 0.11 $ scale 0.25 1 $ rand)
# nudge (slow 28 $ scale 0 1 $ sine)
# n (slow 0.1 $ choose [0..199])
# up (slow 0.14 $ scale 0 26 $ rand)

d1 $ degradeBy 0.2 $ slow 1 $ slowspread density [1,1,1,1.625,1.5,1.25,2,1.125,1.125,1.125,2,0.75,0.5,0.5] $ slowspread density [0.3,0.35,0.4,0.45,0.6,1.15,1.3,1.135,1.14,1.135,1.3,1.15,0.6,0.45,0.4,0.35,1,1,1,1,0.5] $ s "ar*8? cp" # n (density 8 $ choose[0,1..7]) # cut "1" # gain "1.25" # pan rand
d2 $ degradeBy 0.2 $ slow 1 $ slowspread density [1,1,1,1.625,1.5,1.25,2,1.125,1.125,1.125,2,0.75,0.5,0.5] $ slowspread density [0.3,0.35,0.4,0.45,0.6,1.15,1.3,1.135,1.14,1.135,1.3,1.15,0.6,0.45,0.4,0.35,1,1,1,1,0.5] $ s "sh9*8? gab" # n (density 9 $ choose[0,1..7]) # attack "0" # hold "0" # release "0.5" # gain "1.25" # pan (density 17 $ rand)
d3 $ degradeBy 0.2 $ slow 1 $ slowspread density [1,1,1,1.625,1.5,1.25,2,1.125,1.125,1.125,2,0.75,0.5,0.5] $ slowspread density [0.3,0.35,0.4,0.45,0.6,1.15,1.3,1.135,1.14,1.135,1.3,1.15,0.6,0.45,0.4,0.35,1,1,1,1,0.5] $ s "808*8? sh9" # n (density 10 $ choose[0,1..7]) # attack "0" # hold "0" # release "0.5" # gain "1.5" # pan (density 18 $ rand)
d4 $ degradeBy 0.2 $ slow 1 $ slowspread density [1,1,1,1.625,1.5,1.25,2,1.125,1.125,1.125,2,0.75,0.5,0.5] $ slowspread density [0.3,0.35,0.4,0.45,0.6,1.15,1.3,1.135,1.14,1.135,1.3,1.15,0.6,0.45,0.4,0.35,1,1,1,1,0.5] $ s "707*8?808bd" # n (density 11 $ choose[0,1..7]) # attack "0" # hold "0" # release "0.5" # gain "1.5" # pan (density 19 $ rand)
d5 $ degradeBy 0.2 $ slow 1 $ slowspread density [1,1,1,1.625,1.5,1.25,2,1.125,1.125,1.125,2,0.75,0.5,0.5] $ slowspread density [0.3,0.35,0.4,0.45,0.6,1.15,1.3,1.135,1.14,1.135,1.3,1.15,0.6,0.45,0.4,0.35,1,1,1,1,0.5] $ s "909*8?  bass2" # n (density 12 $ choose[0,1..7]) # attack "0" # hold "0" # release "0.5" # gain "1.25" # pan (density 20 $ rand)
d6 $ degradeBy 0.2 $ slow 1 $ slowspread density [1,1,1,1.625,1.5,1.25,2,1.125,1.125,1.125,2,0.75,0.5,0.5] $ slowspread density [0.3,0.35,0.4,0.45,0.6,1.15,1.3,1.135,1.14,1.135,1.3,1.15,0.6,0.45,0.4,0.35,1,1,1,1,0.5] $ s "808bd*8? bd" # n (density 13 $ choose[0,1..7]) # attack "0" # hold "0" # release "0.5" # gain "1.25" # pan (density 21 $ rand)
d7 $ degradeBy 0.2 $ slow 1 $ slowspread density [1,1,1,1.625,1.5,1.25,2,1.125,1.125,1.125,2,0.75,0.5,0.5] $ slowspread density [0.3,0.35,0.4,0.45,0.6,1.15,1.3,1.135,1.14,1.135,1.3,1.15,0.6,0.45,0.4,0.35,1,1,1,1,0.5] $ s "626*8? gabba" # n (density 14 $ choose[0,1..7]) # attack "0" # hold "0" # release "0.5" # gain "1.125" # pan (density 22 $ rand)
d8 $ degradeBy 0.2 $ slow 1 $ slowspread density [1,1,1,1.625,1.5,1.25,2,1.125,1.125,1.125,2,0.75,0.5,0.5] $ slowspread density [0.3,0.35,0.4,0.45,0.6,1.15,1.3,1.135,1.14,1.135,1.3,1.15,0.6,0.45,0.4,0.35,1,1,1,1,0.5] $ s "101*8? odx" # n (density 15 $ choose[0,1..7]) # attack "0" # hold "0" # release "0.15" # gain "1.85" # pan (density 23 $ rand)
d9 $ degradeBy 0.2 $ slow 1 $ slowspread density [1,1,1,1.625,1.5,1.25,2,1.125,1.125,1.125,2,0.75,0.5,0.5] $ slowspread density [0.3,0.35,0.4,0.45,0.6,1.15,1.3,1.135,1.14,1.135,1.3,1.15,0.6,0.45,0.4,0.35,1,1,1,0.5] $ s "303*8? feel" # n (density 16 $ choose[0,1..7]) # attack "0" # hold "0" # release "0.15" # gain "1.85" # pan (density 24 $ rand)
m1 $ degradeBy 0.2 $ slow 1 $ slowspread density [1,1,1,1.625,1.5,1.25,2,1.125,1.125,1.125,2,0.75,0.5,0.5] $ slowspread density [0.3,0.35,0.4,0.45,0.6,1.15,1.3,1.135,1.14,1.135,1.3,1.15,0.6,0.45,0.4,0.35,1,1,1] $ n "128? 128" #cc127 (density 25 $ scale 0 0.75 $ rand) #cc126 (density 26 $ scale 0 1 $ rand) #cc125 (density 27 $ scale 0.5 1 $ rand) #cc124 (density 28 $ scale 0  0.5 $ rand) #cc123 (density 29 $ scale 0.5 1 $ rand) #cc122 (density 30 $ scale 0.5 1 $ rand) #cc121 (density 31 $ scale 0 0.75 $ rand) #cc120 (density 32 $ scale 0 1 $ rand) #cc119 (density 33 $ scale 0 1 $ rand) #cc118 (density 34 $ scale 0 1 $ rand) #cc115 (density 37 $ scale 0 1 $ rand) #cc114 (density 38 $ scale 0 1 $ rand) #cc112 (density 40 $ scale 0 1 $ rand) #cc111 (density 39 $ scale 0 1 $ rand) #cc110 (density 40 $ scale 0 1 $ rand) #cc109 (density 41 $ scale 0 1 $ rand) #cc108 (density 42 $ scale 0 0 $ rand) #cc107 (density 43 $ scale 0 1 $ rand) #cc106 (density 44 $ scale 0 1 $ rand) #cc105 (density 45 $ scale 0 1 $ rand) #cc104 (density 46 $ scale 0.5 1 $ rand) #cc103 (density 47 $ choose [0,1]) #cc102 (density 48 $ choose [0,1]) #cc101 (density 49 $ choose [0,1]) #cc100 (density 50 $ choose [0,1]) #cc99 (density 51 $ scale 0 0.125 $ rand) #cc98 (density 52 $ choose [0,1]) #cc97 (density 53 $ choose [0,1]) #cc96 (density 54 $ choose [0,0.5]) #cc95 (density 56 $ scale 0 1 $ rand) #cc94 (density 57 $ scale 0 0.5 $ rand) #cc93 (density 58 $ scale 0 1 $ rand) #cc92 (density 59 $ choose [0,1]) #cc91 (density 58 $ choose [0,1]) #cc90 (density 59 $ choose [0,1]) #cc89 (density 58 $ scale 0 1 $ rand)

m1 $ n "128" #cc89 (density 58 $ scale 0 1 $ rand)

hush

import Sound.Tidal.MIDI.Context
import Sound.Tidal.MIDI.Stream
import Sound.Tidal.MIDI.Synth
import Sound.Tidal.MIDI.CC

devs <- midiDevices
displayOutputDevices >>= putStrLn

m1 <- midiStream devs "IAC Driver Bus 1" 1 ccallController

let hush = mapM_ ($ silence) [d1,d2,d3,d4,d5,d6,d7,d8,d9,m1]
solo = (>>) hush
hush

import Sound.Tidal.MIDI.Context
import Sound.Tidal.MIDI.Stream
import Sound.Tidal.MIDI.Synth
import Sound.Tidal.MIDI.CC
devs <- midiDevices
displayOutputDevices >>= putStrLn
m1 <- midiStream devs "Network Session 1" 1 ccallController
m2 <- midiStream devs "IAC Bus 1" 1 ccallController
let hush = mapM_ ($ silence) [m1,m2,d1,d2,d3,d4,d5,d6,d7,d8,d9]
solo = (>>) hush
hush

m1
$ iter 2
$ degradeBy 0.25
$ midinote (randcat ["36*8","26*6","46*4","16*12","56*8","44*16"])
# dur 1
# cc0 (discretise (1/2) $slow 0.1 $ rand)
# cc1 (discretise (1/3) $ slow 0.11 $scale 0 0.3 $ rand)
# cc2 (discretise (1/4) $slow 0.12 $ rand)
# cc3 (discretise (1/5) $slow 0.13 $ rand)
# cc4 (discretise (1/7) $slow 0.14 $ scale 0.5 1 $ rand)
# cc5 (discretise (1/6) $ slow 0.15 $ scale 0.05 0.15 $ rand)
# velocity (discretise (1/8) $ slow 0.16 $ scale 0.5 1 $ rand)

m2
$ iter 2
$ degradeBy 0.25
$ midinote (randcat ["36*8","26*6","46*4","16*12","56*8","44*16"])
# cc0 (discretise (1/9) $ slow 0.17 $ rand)
# cc1 (discretise (1/11) $ slow 0.18 $ rand)
# cc2 (discretise (1/13) $ slow 0.19 $ rand)
# cc3 (discretise (1/15) $ slow 0.20 $ rand)
# cc4 (discretise (1/17) $ slow 0.21 $ rand)
# cc5 (discretise (1/8) $ slow 0.22 $ rand)
# cc6 (discretise (1/7) $ slow 0.23 $ rand)


d1
$ (0.125<~)
$ iter 2
$ degradeBy 0.25
$ s (randcat ["prr*8","prr*6","prr*4","prr*12","prr*8","prr*16"])
# n 4
# rel 0.18

let wchoose weights values = choose $ concatMap (\x -> replicate (fst x) (snd x)) (zip weights values) 
import Sound.Tidal.SpectralTricks

d1
$ fast 3.125
$ sometimesBy 0.125 (fast 1.5)
$ s "pmb*8?"
# n (slow 0.1 $ choose [0..9])
# pan (slow 0.11 $ rand)
# cut (slow 0.12 $ wchoose [8,1][0,1])
# att (slow 0.13 $ scalex 1 0.001 $ rand)
# hold (slow 0.14 $ scalex 0.001 3 $ rand)
# rel (slow 0.15 $ scalex 0.001 4 $ rand)
# begin (slow 0.16 $ scalex 2 0.001 $ rand)
# end (slow 0.17 $ scalex 2.1 5 $ rand)
# loop (slow 0.18 $ choose [1..4])
# lpf (slow 0.19 $ scalex 2000 20000 $ rand)
# hpf (slow 0.2 $ scalex 1000 20 $ rand)
# speed (slow 0.21 $ scalex 0.5 1.25 $ rand)
# accelerate (slow 0.22 $ scale (-0.02) 0.02 $ rand)
# delay (slow 27 $ scalex 1 0.001 $ sine)
# delayfb (slow 26 $ scalex 0.99 1 $ sine)
# delayt (discretise (1/19) $ slow 0.23 $ choose [0.125..0.25] 
/ choose [1.5,2,2.5,3,3.5,4,4.5]) 
# gain (slow 0.23 $ scalex 0.1 3 $ rand)










d1
$ sometimesBy (1/64) (# comb (slow 16 $ scale 0.7 0.995 $ rand))
$ slow 1.5
$ s "srg*16?"
# rel (slow 15 $ scale 2 0.1 $ sine)
# delay 1
# delayfb 1
# delayt (discretise (1/4) $ slow 0.1 $ choose [1/16]
/ choose [4..48])
# comb (slow 16 $ scale 0.7 0.995 $ rand)
# gain (slow 16 $ scale (1/16) 2 $ rand)
# cut (slow 0.11 $ choose [0,1])
# nudge (slow 8 $ scale 0 1.5 $ sine)
# pan (slow 19 $ saw)
# hpf (slow 11 $ scalex 200 20 $ rand)
# speed (slow 17 $ scale (1/32) 3 $ rand)
# n (slow 0.13 $ choose [0,6,11])









d1
$ slow 1.5
$ s "srg*16?"
# rel (slow 15 $ scale 2 0.1 $ sine)
# delay 1
# delayfb 1
# delayt (discretise (1/4) $ slow 0.1 $ choose [1/16]
/ choose [4..48])
# comb (slow 16 $ scale 0.7 0.995 $ rand)
# gain (slow 16 $ scale (1/16) 2 $ rand)
# cut (slow 0.11 $ choose [0,1])
# nudge (slow 8 $ scale 0 1.5 $ sine)
# pan (slow 19 $ saw)
# hpf (slow 11 $ scalex 200 20 $ rand)
# speed (slow 17 $ scale (1/32) 3 $ rand)
# n (slow 0.13 $ choose [0,6,11])
# freeze (slow 0.12 $ choose [0,1])















d1
$ spreadChoose _slow [1,1.5,2,2.5,3,3.5,4]
$ degradeBy (1/19)
$ spread slow [1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6]
$ spread fast [1,1.5,2,2.5,3,3.5]
$ s (randcat["bch*8","sbu*9"])
# n (slow 0.1 $ choose [0..126])
# comb (slow 0.11 $ rand)
# nudge (slow 19 $ sine)
# pan (slow 17 $ saw)
# gain (slow 0.12 $ scale 1 2 $ rand)
# up (slow 0.18 $ choose [-18,-17.5,-17,-16.5,-16,-15.5,
-15,-14.5,-14,-13.5,-13,-12.5,-12,-11.5,-11,-10.5,-10,
-9.5,-9,-8.5,-8,-7.5,-7,-6.5-6,-5.5-5,-4.5,-4,-3.5,-3,
-2.5,-2,-1.5,-1,-0.5,0])
# scram (slow 0.23 $ rand)
# accelerate (slow 0.22 $ scale (-0.03125) 0 $ rand)
# cut (slow 0.21 $ wchoose [21,3][0,1])
# rel (slow 0.24 $ scale 1 3 $ rand)
# hpf (slow 0.25 $ scale 20 400 $ rand)
# hbrick (slow 0.26 $ scale 0 0.01 $ rand)
# att (slow 0.27 $ scale 0 3 $ rand)
# begin (slow 0.28 $ rand)
# end (slow 0.29 $ scale 0 4 $ rand)
# hold (slow 0.3 $ scale 1 3 $ rand)
# freeze (slow 0.31 $ wchoose [4,1][0,1])
























d1 
$ degradeBy 0.3
$ sometimesBy (1/9) (spread _slow [1,1])
$ slow (discretise (1/1) $ choose [1,1.25,1.25])
$ fast (discretise (1/5) $ choose [1,1.5,2])
$ s (randcat["srg*9","srg*8","srg*7","sbu*9","sbu*8"]) 
# n (slow 0.1 $ choose [0..2]) 
# up (slow 0.11 $ scale (-24) 24 $ rand)
# cut (slow 0.12 $ wchoose [1,4][0,1])
# rel (slow 0.13 $ choose [0.1,2])
# gain (slow 0.14 $ scalex 0.75 1.5 $ rand)
# lpf (slow 0.15 $ scalex 20 20000 $ rand)



































d1
$ sometimesBy 0.95 (iter 2)
$ sometimesBy 0.9 (iter 3)
$ sometimesBy 0.85 (iter 4)
$ sometimesBy 0.8 (iter 5)
$ sometimesBy 0.75 (iter 6)
$ sometimesBy 0.7 (iter 7)
$ sometimesBy 0.65 (iter 8)
$ sometimesBy 0.6 (iter 9)
$ sometimesBy 0.55 (fast (choose [1,1.1,2,2.2,3,3.3]))
$ sometimesBy 0.5 (spread _slow [2,2,2])
$ s (randcat["sbu:3(3,8)","sbu:2(4,9)","sbu:1(5,11)","sbu(6,13)",
"sbu:4(7,15)","sbu:5(8,17)","sbu:6(9,19)","sbu:7(10,22)","sbu:8(11,25)",
"sbu:9(12,29)","sbu:10(13,35)","sbu:11(14,37)","sbu:12(15,39)",
"sbu:13(16,41)","sbu:15(17,43)"])
# up (discretise (1/9) $ slow 0.1 $ scale (-12) 12 $ rand)
# pan (discretise (1/5) $ slow 0.18 $ rand)
# gain (slow 0.12 $ scale 0.75 2 $ rand)
# nudge (slow 0.13 $ scale 0 2 $ rand)
# cut (slow 0.14 $ choose [0,1])
# delay (slow 0.17 $ scale 0.65 1 $ rand)
# delayfb (slow 0.16 $ choose [0,1])
# delayt (slow 0.15 $ choose [8,7,6,5,4,3,2,1,(1/2),(1/3),(1/4),(1/5),
(1/6),(1/7),(1/8),(1/9),(1/10),(1/11),(1/12),(1/13),(1/14),(1/15),
(1/16),(1/17),(1/18),(1/19),(1/20),(1/21),(1/22),(1/23),(1/24),(1/25),
(1/26),(1/27),(1/28),(1/29),(1/30),(1/31),(1/32),(1/33),(1/34),(1/35),
(1/36),(1/37),(1/38),(1/39),(1/40),(1/41),(1/42),(1/43),(1/44),(1/45),
(1/46),(1/47),(1/48),(1/49),(1/50),(1/51),(1/52),(1/53),(1/54),(1/55),
(1/56),(1/57),(1/58),(1/59),(1/60),(1/61),(1/62),(1/63),(1/64)])




























d1 
$ fast (discretise (1/3) $ choose [9..21])
$ stack[
degradeBy 0.125
$ randcat[s"sbu",s"srg"]
# n (discretise (1/7) $ choose [0..8])
# rel (discretise (1/8) $ choose [1/8,1/6,1/4])
# pan (discretise (1/6) $ slow 0.1 $ scale 0.25 0.75 $ rand)
# up (discretise (1/5) $ slow 0.11 $ wchoose [1,2,4][0,-12,-24])
# gain (slow 0.12 $ scalex 0.125 2 $ rand)
# cut 1
# shape (slow 0.13 $ scale 0 0.5 $ rand),
degradeBy 0.125
$ s "rap"
# n (discretise (1/9) $ choose [0..16])
# pan (discretise (1/9) $ slow 0.1 $ scale 1 0 $ rand)
# gain (slow 0.14 $ scalex 0.125 1.4 $ rand)
# rel (slow 16 sine)
# up (-3)
]






















d1
$ spreadChoose _fast [1..4]
$ sometimesBy 0.5 (slow 2)
$ s "srg*29?"
# pan (slow 4 $ saw)
# gain (slow 0.1 $ scale 0.5 2 $ rand)
# rel (slow 0.11 $ scale 0.25 1 $ rand)
# nudge (slow 28 $ scale 0 1 $ sine)
# n (slow 0.1 $ choose [0..199])
# up (slow 0.14 $ scale 0 26 $ rand)


















d1
$ fast 7
$ sometimesBy 0.6 (iter 4)
$ sometimesBy 0.65 (degradeBy 0.8)
$ sometimesBy 0.9 (striate' 11(5/2))
$ spreadChoose _fast [1.6,1.8,1.9,1.9,1.4,1.5,1,1.3,1.7,0.25,0.5]
$ s (randcat["tuu(5,9?)","sbu(3,8?)"])
# n (discretise (1/27) $ slow 0.1 $ choose ([0..6] ++ [10..16]))
# rel (slow 0.11 $ scale 0.5 2.5 $ rand)
# lpf (slow 0.12 $ scalex 2000 20000 $ rand)
# up (slow 0.13 $ choose [-12.9,-11.2,-10.7,-9.3,-8.9,-7.8,-6.7,    
-5,4,-4.7,-3.1,-2.5,-1.3,0])
# gain (slow 0.15 $ scalex 0.5 1.5 $ rand)
# nudge (slow 32 $ scale 0 2 $ sine)
# delay (slow 0.17 $ scale 0.001 0.2 $ rand)
# delayfb 1
# delayt (discretise (1/48) $ slow 0.18 $ choose [1/19]
/ choose [1,2,4,8,16,32,64,128,256]
* choose [1,2,4])
# pan (slow 0.19 $ saw)
# cut (slow 0.2 $ wchoose [1,2][0,1])


















d1
$ slow 2
$ sometimesBy (1/3) (spreadChoose _slow [3..29])
$ sometimesBy (1/5) (iter 4)
$ sometimesBy (1/4) (striate (wchoose [1,2,3,4,5,6,7] [64,32,16,8,4,2,1]))
$ slow 3
$ sometimesBy 0.5 (spread _slow [2,2,2,2,2,4])
$ spreadChoose fast [1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2]
$ stack [
iter 2
$ fast 4
$ s "srg"
# up (discretise (1/8) $ slow 0.1 $ choose [0..12])
# shape 0.9
# pan (slow 0.11 $ rand)
# loop 28
# nudge (slow 32 $ scale 0 2 $ sine)
# cut 1,
fast 1.25
$ s "sbu:3*9?"
# up (slow 0.12 $ choose [-12..24])
# pan (slow 36 $ sine)
# gain 3
# hpf (slow 48 $ scale 20 10000 $ sine)
# nudge (slow 41 $ scale 0 3 $ sine),
s "pmb"
# n (slow 0.13 $ choose [0..9])
# nudge (slow 9 $ scale 0 4 $ saw),
fast 2.6
$ degradeBy 0.25 
$ s "tuu(3,8)"
# n (slow 0.14 $ choose [0..22])
# shape 0.9
# pan (slow 13 saw)
# speed 2
# gain (slow 19 $ scale 1 2 $ sine)
# up (slow 0.15 $ wchoose [9,8,4,2,1][0,-3,-6,-9,-12])
# cut 2
]
# delay (slow 75 $ sine)
# delayfb 1
# delayt (discretise (1/2) $ slow 0.14 $ scale (5/1444428) (2/456) $ rand)


























d1
$ sometimesBy 0.35 (slow 3)
$ fast 8
$ stack[
s "bch:31"
# up (slow 428 $ scale 46 66 $ sine)
# pan 0.5,
s "bch:31"
# up (slow 316 $ scale 22 46 $ saw)
# pan 1,
s "bch:31"
# up (slow 274 $ scale 27 10 $ saw)
# pan 0,
s "bch:31"
# up (slow 674 $ scale 10 19 $ saw)
# pan 0.25,
s "bch:31"
# up (slow 293 $ scale 7 25 $ saw)
# pan 0.75
]
# nudge (slow 128 $ scale 0 3 $ sine)
# hpf (slow 278 $ scalex 20000 20 $ sine)
# delayt (discretise (1/8) $ slow 0.1 $ scalex (1/298) (1/295) $ rand)
# delay (discretise (1/9) $ slow 0.11 $ scale 0 0.75 $ rand)
# delayfb (discretise (1/10) $ slow 0.12 $ wchoose [1,8] [0,1])
# gain (slow 0.13 $ scalex 1 4 $ rand)
# rel (slow 0.14 $ scale 0 2 $ rand)
# shape 0.5

























d1
$ fast (discretise (1/290) $ choose [9..29])
$ s "pmb:1"
# speed (discretise (1/291) $ slow 0.11 $ scale (-4) (-1) $ rand)
# hpf (slow 0.14 $ scale 20 10000 $ rand)
# pan (discretise (1/145) $ slow 0.12 $ rand)
# gain (slow 0.13 $ scale 0.5 0.75 $ rand)
# att (slow 0.15 $ scale 0 1 $ rand)
# rel (slow 0.16 $ scale 2 4 $ rand)
# hresonance (discretise (1/292) $ slow 0.17 $ scalex 1 0.1 $ rand)


















d1
$ fast (discretise (1/190) $ choose [9..29])
$ s "pmb:1"
# speed (discretise (1/191) $ slow 0.11 $ scale (-4) (-1) $ rand)
# hpf (slow 0.14 $ scale 2000 20000 $ rand)
# pan (slow 0.12 $ rand)
# gain (slow 0.13 $ scale 0.5 2 $ rand)
# att (slow 0.15 $ scale 0 1 $ rand)
# rel (slow 0.16 $ scale 2 4 $ rand)







d1
$ fast 8
$ stack[
s "bch:31"
# up (slow 428 $ scale 46 66 $ sine)
# pan 0.5,
s "bch:31"
# up (slow 316 $ scale 22 46 $ saw)
# pan 1,
s "bch:31"
# up (slow 274 $ scale 27 10 $ saw)
# pan 0,
s "bch:31"
# up (slow 674 $ scale 10 19 $ saw)
# pan 0.25,
s "bch:31"
# up (slow 293 $ scale 7 25 $ saw)
# pan 0.75
]
# nudge (slow 128 $ scale (-0.5) 32 $ sine)
# hpf (slow 278 $ scale 20000 20 $ sine)
# delayt (discretise (1/8) $ slow 0.1 $ scale (1/296) (1/297) $ rand)
# delay (discretise (1/9) $ slow 0.11 $ scale 0.5 1 $ rand)
# delayfb (discretise (1/10) $ slow 0.12 $ wchoose [1,8] [0,1])
# gain (slow 0.13 $ scale 0 4.5 $ rand)
# rel (slow 0.14 $ scale 0 2 $ rand)
# shape 0.5






















d1
$ s "clp*8"
# pan (discretise (1/2) $ slow 0.1 $ choose [
0/8,1/8,2/8,3/8,4/8,5/8,6/8,7/8
])



d1
$ sometimesBy 0.45 (spread _slow [2,2,2,4,4])
$ sometimesBy 0.5 (slow 2)
$ stack[
degradeBy 0.4
$ sometimesBy 0.05 (2<~)
$ fast 2
$ sometimesBy 0.1 (iter 2)
$ spreadChoose _fast [1..2]
$ s (randcat["tuu*8?","srg*7?","sbu*6?"])
# pan (slow 0.1 $ rand)
# n (discretise (1/7) $ slow 0.11 $ choose [0..99])
# up (discretise (1/8) $ slow 0.12 $ scale (-16) 16 $ rand)
# gain 4
# nudge (discretise (1/32) $ slow 0.13 $ scale (-0.5) 3 $ rand)
# shape (slow 0.14 $ rand)
# delay (slow 160 $ scale 0.95 1 $ sine)
# delayfb 1
# delayt (discretise (1/56) $ slow 0.15 $
choose [1/32,1/64,1/128,1/256,1/512]
/ wchoose[9,8,7,6,5,4,3,2,1] [1..9]
* wchoose [12,11,10,9,8,7,6,5,4,3,2,1] 
[1,1.4,2.3,3.6,4.7,5.9,6.2,7.3,8.5,9.7,10.1,11.7]
* (slow 56 $ scale 1 2 $ sine))
# rel (slow 133 $ scale 0 2 $ saw),
degradeBy 0.4
$ sometimesBy 0.05 (2<~)
$ fast 2
$ sometimesBy 0.1 (iter 2)
$ spreadChoose _fast [1..2]
$ s (randcat["bch*5?"])
# pan (slow 0.15 $ rand)
# n (discretise (1/9) $ slow 0.16 $ choose [21..39])
# up (discretise (1/11) $ slow 0.17 $ scale (-18) 0 $ rand)
# gain 4
# att (slow 0.18 $ scale 2 4 $ rand)
# hpf (discretise (1/9) $ slow 0.19 $ wchoose [5,4,3,2,1] 
[20,40,160,320,640])
]






























d1
$ s "clp*12"
# pan (slow 0.1 $ choose [
0/22,1/22,2/22,3/22,4/22,5/22,6/22,7/22,8/22,9/22,
12/22,13/22,14/22,15/22,16/22,17/22,18/22,19/22,20/21,21/22
])





















let wchoose weights values = choose $ concatMap (\x -> replicate (fst x) (snd x)) (zip weights values)

d1 
$ iter 8
$ sometimesBy 0.5 (0.5<~)
$ fast 2
$ sometimesBy (1/3) (fast 4)
$ s (randcat["dx7","txz"])
# speed (slow 24 $ scale (-0.2) 1 $ sine)
# accelerate (slow 25 $ scale (-0.01) 0.01 $ sine)
# shape (slow 23 $ scale 0 0.5 $ sine)
# rel (slow 22 $ scalex 0.01 1 $ sine)
# n (slow 0.13 $ wchoose [1,4,1,1,8,1,1][1,2,3,5,6,7,11] - wchoose [1,1,2,4][0,1,3,5])
# pan (slow 0.14 $ rand)
# lpf (slow 0.15 $ scalex 20 20000 $ rand)
# up (slow 0.21 $ wchoose [100,10,1][12,0,-12])
# gain 1.5

d2 
$ sometimesBy (1/16) (iter 8)
$ degradeBy (1/32)
$ fast 8
$ s "jus"
# n (discretise (1/128) $ slow 0.1 $ choose [1..1009])
# gain (slow 0.12 $ scalex 1 4 $ rand)
# pan (slow 28 $ sine)
# orbit 1
# delay (slow 26 $ scale 0 0.1 $ sine)
# rel (slow 29 $ scalex 0.001 0.5 $ sine)
# delayfb 1
# delayt (discretise (1/2) $ 1/128 / choose [1,2] * wchoose [32,16,8,4,2,1] [1,2,4,8,16,32])
# lpf (slow 27 $ scalex 800 20000 $ sine)
# up 0.3

d3 
$ sometimesBy 0.65 (fast 2)
$ sometimesBy 0.31 (fast 2)
$ s "rnb*4?"
# rel 0.01
# n (discretise (1/8) $ slow 0.17 $ choose [0..999])
# gain (slow 0.16 $ scale 1 3.9 $ rand)
# rel 0.2
# coarse (discretise (1/8) $ slow 0.18 $ choose [2..8])
# orbit (slow 0.17 $ choose [0,1])
# pan (slow 0.19 $ rand)
# hpf (slow 30 $ scalex 1000 20000 $ rand)

d4 
$ s "808bd*2" 
# gain (slow 0.22 $ scale 4 8 $ rand) 
# rel (discretise (1/8) $ slow 0.23 $ scalex 0.1 0.125 $ rand)
# n (discretise (1/8) $ slow 0.2 $ choose [0..24])
# hpf 40

d5
$ s "cp"
# gain 2.6
# rel (discretise (1/5) $ slow 0.16 $ scalex 0.2 0.4 $ rand)
